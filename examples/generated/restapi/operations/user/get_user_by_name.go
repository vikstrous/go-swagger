package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/vikstrous/go-swagger/examples/generated/models"
	"github.com/vikstrous/go-swagger/httpkit/middleware"
)

// GetUserByNameHandlerFunc turns a function with the right signature into a get user by name handler
type GetUserByNameHandlerFunc func(GetUserByNameParams) (*models.User, error)

func (fn GetUserByNameHandlerFunc) Handle(params GetUserByNameParams) (*models.User, error) {
	return fn(params)
}

// GetUserByNameHandler interface for that can handle valid get user by name params
type GetUserByNameHandler interface {
	Handle(GetUserByNameParams) (*models.User, error)
}

// NewGetUserByName creates a new http.Handler for the get user by name operation
func NewGetUserByName(ctx *middleware.Context, handler GetUserByNameHandler) *GetUserByName {
	return &GetUserByName{Context: ctx, Handler: handler}
}

// GetUserByName
type GetUserByName struct {
	Context *middleware.Context
	Params  GetUserByNameParams
	Handler GetUserByNameHandler
}

func (o *GetUserByName) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)

	if err := o.Context.BindValidRequest(r, route, &o.Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res, err := o.Handler.Handle(o.Params) // actually handle the request
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	o.Context.Respond(rw, r, route.Produces, route, res)

}
